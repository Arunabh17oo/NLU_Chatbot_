version: '3.8'

services:
  # MongoDB Database (Using MongoDB Atlas - no local container needed)
  # mongodb:
  #   image: mongo:7.0
  #   container_name: chatbot-mongodb
  #   restart: unless-stopped
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
  #     MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password}
  #     MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-mern_chatbot}
  #   ports:
  #     - "27017:27017"
  #   volumes:
  #     - mongodb_data:/data/db
  #     - ./mongo-init:/docker-entrypoint-initdb.d
  #   networks:
  #     - chatbot-network
  #   healthcheck:
  #     test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 40s

  # Backend API
  backend:
    build:
      context: ./chatbot-backend
      dockerfile: Dockerfile
    container_name: chatbot-backend
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 3001
      MONGO_URI: ${MONGO_URI}
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      HUGGINGFACE_API_KEY: ${HUGGINGFACE_API_KEY}
      CLIENT_URL: http://localhost:3000
    ports:
      - "3001:3001"
    volumes:
      - backend_uploads:/app/uploads
    # depends_on:
    #   mongodb:
    #     condition: service_healthy
    networks:
      - chatbot-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend React App
  frontend:
    build:
      context: ./chatbot-frontend
      dockerfile: Dockerfile
    container_name: chatbot-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - chatbot-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # MongoDB Express (Optional - Database Admin UI) - Disabled for Atlas
  # mongo-express:
  #   image: mongo-express:1.0.2
  #   container_name: chatbot-mongo-express
  #   restart: unless-stopped
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME:-admin}
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD:-password}
  #     ME_CONFIG_MONGODB_URL: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-password}@mongodb:27017/
  #     ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USERNAME:-admin}
  #     ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD:-pass}
  #   ports:
  #     - "8081:8081"
  #   depends_on:
  #     mongodb:
  #       condition: service_healthy
  #   networks:
  #     - chatbot-network
  #   profiles:
  #     - admin

volumes:
  mongodb_data:
    driver: local
  backend_uploads:
    driver: local

networks:
  chatbot-network:
    driver: bridge
